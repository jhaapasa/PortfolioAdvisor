[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "portfolio-advisor"
version = "0.1.0"
description = "LangGraph-based portfolio analysis with function-defined agents"
readme = "README.md"
requires-python = ">=3.13,<3.14"
license = { file = "LICENSE" }
authors = [
  { name = "PortfolioAdvisor Team" }
]
dependencies = [
  "langgraph>=0.2.46",
  "langchain-core>=0.3.5",
  "langchain-openai>=0.2.0",
  "langchain-community>=0.3.0",
  "pydantic>=2.7",
  "pydantic-settings>=2.5",
  "python-dotenv>=1.0.1",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2",
  "pytest-cov>=5.0",
  "black>=24.8",
  "ruff>=0.6.8",
]

[project.urls]
Homepage = "https://github.com/"

[project.scripts]
portfolio-advisor = "portfolio_advisor.cli:main"

[tool.black]
line-length = 100
target-version = ["py313"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "I",   # isort (import sorting)
  "UP",  # pyupgrade
]

[tool.ruff.lint.isort]
known-first-party = ["portfolio_advisor"]
combine-as-imports = true

[tool.pytest.ini_options]
addopts = "-q --cov=src/portfolio_advisor --cov-report=term-missing"
testpaths = ["tests"]

[tool.hatch.build.targets.wheel]
packages = ["src/portfolio_advisor"]

[tool.hatch.build.targets.sdist]
include = [
  "src/portfolio_advisor/**",
  "README.md",
  "LICENSE",
  "pyproject.toml",
]


